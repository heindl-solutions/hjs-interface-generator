<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.1" halcon_version="12.0.2">
<procedure name="WriteNanExports">
<interface>
<ic>
<par name="OpName" base_type="ctrl" dimension="0"/>
<par name="Index" base_type="ctrl" dimension="0"/>
<par name="Dir" base_type="ctrl" dimension="0"/>
<par name="OpNamesFileHandle" base_type="ctrl" dimension="0"/>
<par name="OpNamesHeaderFileHandle" base_type="ctrl" dimension="0"/>
</ic>
</interface>
<body>
<c>* hjs-interface-generator.hdev - Generate an example JavaScript interface for HALCON.</c>
<c>* Copyright (C) 2017 Andreas Heindl heindl-solutions.com</c>
<l>global tuple NanExportLineTemplate</l>
<l>global tuple AsyncOpNames</l>
<l>Suffix := ''</l>
<l>if (find(AsyncOpNames,OpName) # -1)</l>
<c>    * additionally, write OPNAME_async methods</c>
<l>    Suffix := [Suffix, '_async']</l>
<l>endif</l>
<l>for  IndexSuffix := 0 to |Suffix|-1 by 1</l>
<l>    Line := '        ' + NanExportLineTemplate</l>
<l>    tuple_regexp_replace (Line, 'OPNAME', OpName, Line)</l>
<l>    tuple_regexp_replace (Line, ['{ASYNCSUFFIX}','replace_all'], Suffix[IndexSuffix], Line)</l>
<l>    fwrite_string(OpNamesFileHandle, Line + '\n')</l>
<l>endfor</l>
<l>return ()</l>
</body>
<docu id="WriteNanExports">
<parameters>
<parameter id="Dir"/>
<parameter id="Index"/>
<parameter id="OpName"/>
<parameter id="OpNamesFileHandle"/>
<parameter id="OpNamesHeaderFileHandle"/>
</parameters>
</docu>
</procedure>
</hdevelop>
